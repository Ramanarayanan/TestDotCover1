# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: uploadartifact2

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore

    - name: publish
      run: dotnet publish $GITHUB_WORKSPACE/WebApplication1/WebApplication1.csproj --configuration Release --output publish/WebApplication1
    - name: publish
      run: dotnet publish $GITHUB_WORKSPACE/TestProject1/TestProject1.csproj --configuration Release --output publish/TestProject1
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
         name: Application_Artifact
         path: |
                publish/WebApplication1
                publish/TestProject1
  deploy:
    needs: build
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      id: download
      with:
        name: Application_Artifact
        path: ./Package  
    - name: 'Echo download path'
      run: echo ${{steps.download.outputs.download-path}}
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: ./Package
    - name: Install DotCover nuget
      run: |
         
    - name: Test
      run: dotnet test ./Package/TestProject1/TestProject1.dll --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

    - name: Install DotCover
      run: |
           dotnet tool install --global JetBrains.dotCover.GlobalTool
    - name: Test
      run: dotnet test ./Package/TestProject1/TestProject1.dll --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage

   
    - name: Test
      run: |
          
           dotnet dotcover test ./Package/TestProject1/TestProject1.dll --dcReportType=XML --dcOutput=./Package/coverage_report.xml --logger "console;verbosity=normal"
    - name: Display structure of Test files
      run: ls -R
      working-directory: .
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: $GITHUB_WORKSPACE/Package/coverage_report.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
    

    
          
  
    
